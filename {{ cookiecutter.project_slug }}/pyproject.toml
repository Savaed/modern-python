[build-system]
requires = ["poetry-core=={{ cookiecutter.poetry_version }}"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.mail }}>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~{{ cookiecutter.python_version }}"
hydra-core = "^1.3.2"
loguru = "^0.7.2"
pydantic = "^2.4.2"

[tool.poetry.group.dev.dependencies]
covdefaults = "^2.3.0"
coverage = "^7.3.1"
{% if cookiecutter.use_hypothesis -%}
hypothesis = "^6.87.1"
{% endif -%}
pytest = "^7.4.2"

[tool.pytest.ini_options]
pythonpath = "."

[tool.coverage.run]
plugins = ["covdefaults"]
omit = ["**/conftest.py"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "def __str__"]

[tool.black]
line-length = {{ cookiecutter.line_length }}
target-version = ["py{{ cookiecutter.__python_version_str }}"]

[tool.ruff]
line-length = {{ cookiecutter.line_length }}
target-version = "py{{ cookiecutter.__python_version_str }}"

[tool.ruff.isort]
lines-after-imports = 2

[tool.mypy]
mypy_path = "."
explicit_package_bases = true

# The following config is equivalent to --strict (as of mypy 1.0)
warn_unused_configs = true
disallow_any_generics = true
# disallow_subclassing_any = true
# disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
# disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
# no_implicit_reexport = true
strict_equality = true
extra_checks = true

[tool.poetry.scripts]
{{ cookiecutter.project_slug|replace('_', '-') }}-test = "{{ cookiecutter.project_slug }}.scripts.script1:main"
